
volumes:

  mongodb_data:
  postgres_data:
  prometheus_data:

services:

 # MongoDB Shell to connect to servers

 client:
  build: 
   context: .
   dockerfile: Dockerfile.client
  deploy:
   replicas: 0
  depends_on:
   - mongodb
   - postgres
  volumes:
  - $DIR:/dir
  - postgres_data:/var/lib/postgresql/data
  environment:
   - DB_URI=$DB_URI
   - BENCH_DOCS=$BENCH_DOCS
   - BENCH_NUM=$BENCH_NUM
   - BENCH_BYTES=$BENCH_BYTES
   - BENCH_OPERATION=$BENCH_OPERATION
  command: -f /dir/lib.js

 # MongoDB 

 mongodb:
  image: docker.io/mongodb/mongodb-community-server:latest
  # disable WAL compression like the default of PostgreSQL
  command: [ "mongod", "--wiredTigerJournalCompressor", "none" ]
  deploy:
   replicas: 1
   resources:
    limits:
      # set the same limit for mongodb and postgres for a fair comparison
      memory: 9G  
  volumes:
  - mongodb_data:/data/db/var/lib/postgresql/data

 mongodb-init:
  image: alpine/mongosh
  depends_on:
   - mongodb
  volumes:
  - $DIR:/dir
  command: bash -c 'until mongosh -f /dir/init.js mongodb://mongodb:27017 ; do sleep 1 ; done'
 
 # PostgreSQL 

 postgres:
  image: postgres
  # define same memory and cache behavior (40% of RAM, checkpoints every 2GB) - adapt to your system
  command: postgres -c shared_buffers=4GB -c max_wal_size=2GB -c wal_sync_method=open_datasync -c checkpoint_completion_target=0.9 
  deploy:
   replicas: 1
   resources:
    limits:
      # set the same limit for mongodb and postgres for a fair comparison
      memory: 9G  
  environment:
   - POSTGRES_PASSWORD=xxx
     # enable checksums like the default in MongoDB so that we care about data at the same level
   - POSTGRES_INITDB_ARGS=--data-checksums
  volumes :
   - postgres_data:/var/lib/postgresql

 postgres-init:
  image: postgres
  depends_on:
   - postgres
  volumes:
  - $DIR:/dir
  environment:
   - PGPASSWORD=xxx
  command: bash -c 'until psql -h postgres -U postgres -ef /dir/init.sql ; do sleep 1 ; done'
  


# https://last9.io/blog/docker-monitoring-with-prometheus-a-step-by-step-guide/

 prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

 cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

 grafana:
    image: grafana/grafana-oss:latest
    ports:
      - 3000:3000
    user: "0:0"
    volumes:
      - ./grafana:/etc/grafana:ro
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
  
